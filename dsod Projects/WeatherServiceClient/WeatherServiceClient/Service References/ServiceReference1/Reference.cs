//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherServiceClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService4")]
    public interface IService4 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/weather", ReplyAction="http://tempuri.org/IService4/weatherResponse")]
        string[] weather(string zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/weather", ReplyAction="http://tempuri.org/IService4/weatherResponse")]
        System.Threading.Tasks.Task<string[]> weatherAsync(string zip);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService4Channel : WeatherServiceClient.ServiceReference1.IService4, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service4Client : System.ServiceModel.ClientBase<WeatherServiceClient.ServiceReference1.IService4>, WeatherServiceClient.ServiceReference1.IService4 {
        
        public Service4Client() {
        }
        
        public Service4Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service4Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service4Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service4Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] weather(string zip) {
            return base.Channel.weather(zip);
        }
        
        public System.Threading.Tasks.Task<string[]> weatherAsync(string zip) {
            return base.Channel.weatherAsync(zip);
        }
    }
}
